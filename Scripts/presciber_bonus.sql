
-- 1. How many npi numbers appear in the prescriber table but not in the prescription table?

SELECT
 COUNT(DISTINCT(P.NPI)) COUNT_NPI
FROM 
 PRESCRIBER P
WHERE 
 NOT EXISTS (SELECT * FROM PRESCRIPTION PR WHERE P.NPI = PR.NPI)

-- 4458

/*
OR

WITH X AS (
SELECT 
P.NPI,
PR.NPI NULL_NPI
FROM 
PRESCRIBER P
LEFT OUTER JOIN PRESCRIPTION PR ON P.NPI = PR.NPI)
SELECT COUNT(DISTINCT(NPI)) FROM X WHERE NULL_NPI IS NULL
*/


-- 2.
--     a. Find the top five drugs (generic_name) prescribed by prescribers with the specialty of Family Practice.

WITH X AS (
SELECT
    UPPER(P.SPECIALTY_DESCRIPTION) SPECIALTY,
    UPPER(D.GENERIC_NAME) GENERIC_DRUG_NAME,
	SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) TOTAL,
	RANK () OVER (ORDER BY SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) DESC) RANKING
FROM 
	PRESCRIBER P
	INNER JOIN PRESCRIPTION PR  ON P.NPI = PR.NPI AND UPPER(P.SPECIALTY_DESCRIPTION) = 'FAMILY PRACTICE'
	INNER JOIN DRUG D ON UPPER(D.DRUG_NAME) = UPPER(PR.DRUG_NAME)
GROUP BY
    UPPER(P.SPECIALTY_DESCRIPTION),
    UPPER(D.GENERIC_NAME))
SELECT 
    SPECIALTY, 
    GENERIC_DRUG_NAME, 
    TOTAL 
FROM X WHERE RANKING <=5
ORDER BY RANKING ASC

--- 1. LEVOTHYROXINE SODIUM, 2. LISINOPRIL,3. ATORVASTATIN CALCIUM,4.AMLODIPINE BESYLATE, 5.OMEPRAZOLE

--     b. Find the top five drugs (generic_name) prescribed by prescribers with the specialty of Cardiology.
WITH X AS (
SELECT
    UPPER(P.SPECIALTY_DESCRIPTION) SPECIALTY,
    UPPER(D.GENERIC_NAME) GENERIC_DRUG_NAME,
	SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) TOTAL,
	RANK () OVER (ORDER BY SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) DESC) RANKING
FROM 
	PRESCRIBER P
	INNER JOIN PRESCRIPTION PR  ON P.NPI = PR.NPI AND UPPER(P.SPECIALTY_DESCRIPTION) = 'CARDIOLOGY'
	INNER JOIN DRUG D ON UPPER(D.DRUG_NAME) = UPPER(PR.DRUG_NAME)
GROUP BY
    UPPER(P.SPECIALTY_DESCRIPTION),
    UPPER(D.GENERIC_NAME))
SELECT 
    SPECIALTY, 
    GENERIC_DRUG_NAME, 
    TOTAL 
FROM X WHERE RANKING <=5
ORDER BY RANKING ASC 

-- ATORVASTATIN CALCIUM,CARVEDILOL,METOPROLOL TARTRATE ,CLOPIDOGREL BISULFATE, AMLODIPINE BESYLATE 

--     c. Which drugs are in the top five prescribed by Family Practice prescribers and Cardiologists? Combine what you did for parts a and b into a single query to answer this question.
WITH X AS (
SELECT
    UPPER(P.SPECIALTY_DESCRIPTION) SPECIALTY,
    UPPER(D.GENERIC_NAME) GENERIC_DRUG_NAME,
	SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) TOTAL,
	RANK () OVER (PARTITION BY UPPER(P.SPECIALTY_DESCRIPTION) ORDER BY SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) DESC) RANKING
FROM 
	PRESCRIBER P
	INNER JOIN PRESCRIPTION PR  ON P.NPI = PR.NPI AND UPPER(P.SPECIALTY_DESCRIPTION) IN('CARDIOLOGY','FAMILY PRACTICE')
	INNER JOIN DRUG D ON UPPER(D.DRUG_NAME) = UPPER(PR.DRUG_NAME)
GROUP BY
    UPPER(P.SPECIALTY_DESCRIPTION),
    UPPER(D.GENERIC_NAME))
SELECT 
*
FROM X WHERE RANKING <=5
ORDER BY 1, RANKING ASC 

--
-- 3. Your goal in this question is to generate a list of the top prescribers in each of the major metropolitan areas of Tennessee.
--     a. First, write a query that finds the top 5 prescribers in Nashville in terms of the total number of claims (total_claim_count) across all drugs. Report the npi, the total number of claims, and include a column showing the city.


WITH X AS (
SELECT
    P.NPI,
	SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) TOTAL_CLAIMS,
	UPPER(P.NPPES_PROVIDER_CITY) PROVIDER_CITY,
	RANK () OVER (ORDER BY SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) DESC) RANKING
FROM 
	PRESCRIBER P
	INNER JOIN PRESCRIPTION PR  ON P.NPI = PR.NPI AND UPPER(P.NPPES_PROVIDER_STATE) ='TN' AND UPPER(P.NPPES_PROVIDER_CITY)='NASHVILLE'
GROUP BY
    P.NPI,
    UPPER(P.NPPES_PROVIDER_CITY))
SELECT 
*
FROM X WHERE RANKING <=5
ORDER BY RANKING ASC 


--     b. Now, report the same for Memphis.
   
WITH X AS (
SELECT
    P.NPI,
	SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) TOTAL_CLAIMS,
	UPPER(P.NPPES_PROVIDER_CITY) PROVIDER_CITY,
	RANK () OVER (ORDER BY SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) DESC) RANKING
FROM 
	PRESCRIBER P
	INNER JOIN PRESCRIPTION PR  ON P.NPI = PR.NPI AND UPPER(P.NPPES_PROVIDER_STATE) ='TN' AND UPPER(P.NPPES_PROVIDER_CITY)='MEMPHIS'
GROUP BY
    P.NPI,
    UPPER(P.NPPES_PROVIDER_CITY))    
SELECT 
*
FROM X WHERE RANKING <=5
ORDER BY RANKING ASC 

--     c. Combine your results from a and b, along with the results for Knoxville and Chattanooga.

WITH X AS (
SELECT
    P.NPI,
	SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) TOTAL_CLAIMS,
	UPPER(P.NPPES_PROVIDER_CITY) PROVIDER_CITY,
	RANK () OVER (PARTITION BY UPPER(P.NPPES_PROVIDER_CITY) ORDER BY SUM(COALESCE(PR.TOTAL_CLAIM_COUNT,0)) DESC) RANKING
FROM 
	PRESCRIBER P
	INNER JOIN PRESCRIPTION PR  ON P.NPI = PR.NPI AND UPPER(P.NPPES_PROVIDER_STATE) ='TN' 
	AND UPPER(P.NPPES_PROVIDER_CITY) IN ('CHATTANOOGA','MEMPHIS','NASHVILLE','KNOXVILLE')
GROUP BY
    P.NPI,
    UPPER(P.NPPES_PROVIDER_CITY))
    
SELECT 
*
FROM X WHERE RANKING <=5
ORDER BY 3, RANKING ASC 

-- 4. Find all counties which had an above-average number of overdose deaths. Report the county name and number of overdose deaths.

WITH X AS (
SELECT 
 FC.COUNTY,
 FC.STATE,
SUM(OD.OVERDOSE_DEATHS) OVERDOSE_DEATHS,
	(SELECT
  AVG(O.OVERDOSE_DEATHS) AVERAGE_DEATHS
FROM 
   FIPS_COUNTY F
   INNER JOIN OVERDOSE_DEATHS O ON CAST(F.FIPSCOUNTY AS VARCHAR(5)) = CAST(O.FIPSCOUNTY AS VARCHAR(5))) AVERAGE_OD_DEATHS,
   RANK () OVER (ORDER BY SUM(OD.OVERDOSE_DEATHS) DESC) RANKING
FROM FIPS_COUNTY FC
   INNER JOIN OVERDOSE_DEATHS OD ON CAST(FC.FIPSCOUNTY AS VARCHAR(5)) = CAST(OD.FIPSCOUNTY AS VARCHAR(5))
GROUP BY 
FC.COUNTY,
FC.STATE)	
SELECT * FROM X WHERE OVERDOSE_DEATHS > AVERAGE_OD_DEATHS

	
	-- 5.
--     a. Write a query that finds the total population of Tennessee.
/*
SELECT * FROM CBSA LIMIT 10;
SELECT * FROM DRUG LIMIT 10;
SELECT * FROM FIPS_COUNTY LIMIT 10;
SELECT * FROM OVERDOSE_DEATHS LIMIT 10;
SELECT * FROM POPULATION LIMIT 10;
SELECT * FROM PRESCRIBER LIMIT 10;
SELECT * FROM PRESCRIPTION LIMIT 10;
SELECT * FROM ZIP_FIPS LIMIT 10;
*/

SELECT
 UPPER(F.STATE) STATE,
 SUM(PO.POPULATION) TOTAL_TN_POPULATION
FROM  FIPS_COUNTY F
 INNER JOIN POPULATION PO ON CAST(F.FIPSCOUNTY AS VARCHAR(5)) = CAST(PO.FIPSCOUNTY AS VARCHAR(5))
WHERE UPPER(F.STATE) = 'TN'
 GROUP BY UPPER(F.STATE) 


--     b. Build off of the query that you wrote in part a to write a query that returns for each county that county's name, its population, and the percentage of the total population of Tennessee that is contained in that county.

SELECT 
 A.*,
 B.TOTAL_TN_POPULATION,
 ROUND(A.TOTAL_COUNTY_POPULATION/B.TOTAL_TN_POPULATION *100,2) PECENTAGE
FROM(
SELECT
  UPPER(F.COUNTY) COUNTY,
  UPPER(F.STATE) STATE,
  SUM(PO.POPULATION) TOTAL_COUNTY_POPULATION
FROM FIPS_COUNTY F
  INNER JOIN POPULATION PO ON CAST(F.FIPSCOUNTY AS VARCHAR(5)) = CAST(PO.FIPSCOUNTY AS VARCHAR(5))
  WHERE UPPER(F.STATE) = 'TN'
GROUP BY 
 UPPER(F.STATE),
 UPPER(F.COUNTY)) A
INNER JOIN (SELECT 
 UPPER(F.STATE) STATE,
 SUM(PO.POPULATION) TOTAL_TN_POPULATION
 FROM
 FIPS_COUNTY F
  INNER JOIN POPULATION PO ON CAST(F.FIPSCOUNTY AS VARCHAR(5)) = CAST(PO.FIPSCOUNTY AS VARCHAR(5))
GROUP BY UPPER(F.STATE)																	 
) B ON A.STATE = B.STATE
ORDER BY 1